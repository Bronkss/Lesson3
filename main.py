# Задача 16: Требуется вычислить, сколько раз встречается некоторое число X в массиве A[1..N].
# Пользователь в первой строке вводит натуральное число N – количество элементов в массиве.
# В последующих строках записаны N целых чисел Ai. Последняя строка содержит число X


# пример
# 5
# 1 2 3 4 5
# 3
# -> 1


# Задача 18: Требуется найти в массиве A[1..N] самый близкий по величине элемент к заданному числу X.
# Пользователь в первой строке вводит натуральное число N – количество элементов в массиве.
# В последующих строках записаны N целых чисел Ai. Последняя строка содержит число X

# пример
# 5
# 1 2 3 4 5
# 6
# -> 5


# Задача 20: В настольной игре Скрабл (Scrabble) каждая буква имеет определенную ценность.
# В случае с английским алфавитом очки распределяются так:

# A, E, I, O, U, L, N, S, T, R – 1 очко;
# D, G – 2 очка;
# B, C, M, P – 3 очка;
# F, H, V, W, Y – 4 очка;
# K – 5 очков;
# J, X – 8 очков;
# Q, Z – 10 очков.
# А русские буквы оцениваются так:
# А, В, Е, И, Н, О, Р, С, Т – 1 очко;
# Д, К, Л, М, П, У – 2 очка;
# Б, Г, Ё, Ь, Я – 3 очка;
# Й, Ы – 4 очка;
# Ж, З, Х, Ц, Ч – 5 очков;
# Ш, Э, Ю – 8 очков;
# Ф, Щ, Ъ – 10 очков.

# Напишите программу, которая вычисляет стоимость введенного пользователем слова.
# Будем считать, что на вход подается только одно слово, которое содержит либо только английские,
# либо только русские буквы.

# пример

# Ввод:
# ноутбук
# Вывод:
# 12




# Task 1.

lst = []
size_lst = int(input("Задайте размер массива: "))
count = 0
for _ in range(size_lst):
    lst_numbers = int(input("Введите числo в массив: "))
    lst.append(lst_numbers)
print(f' Ваш массив: {lst}')

user_check = int(input("Какое число вы ищите?: "))
for i in range(len(lst)):
    if lst[i] == user_check:
        count += 1

print(f' Ваше число встречается {count} раз(а)')

if count == 0:
    print("Такого числа нет!")


# Task 2.

lst = []
size_lst = int(input("Задайте размер массива: "))
for _ in range(size_lst):
    lst_numbers = int(input("Введите числo в массив: "))
    lst.append(lst_numbers)
print(f' Ваш массив: {lst}')

max_numbers = max(lst)
user_numbers = int(input("Введите интересующее число: "))

if user_numbers > max_numbers:
    user_numbers == max_numbers
print(max_numbers)

# Код не работает если число будет в середине, но условие задачи этого не требует!


# Task 3.

# A, E, I, O, U, L, N, S, T, R – 1 очко;
# D, G – 2 очка;
# B, C, M, P – 3 очка;
# F, H, V, W, Y – 4 очка;
# K – 5 очков;
# J, X – 8 очков;
# Q, Z – 10 очков.

# dictionary = {'A': 1, 'E': 1, 'I': 1, 'O': 1}
#
# user_word = str(input("Введите слово (либо руские, либо английские буквы): "))
#
# count = 0
# for i in range(user_word):
#     if user_word[i] == dictionary['A']:
#         count += 1
#     elif user_word[i] == dictionary['E']:
#         count += 1


# Код взят из Google сразу говорю. Попробовал сам не получилось, но попробую объяснить как он работает

# импортируем некую библиотеку 're'
import re

# Создаётся рекурсивная функция
def isCyrillic(text):
	return bool(re.search('[а-яА-Я]', text))

# Заданные словари
dictionary_en = {1:'AEIOULNSTR', 2:'DG', 3:'BCMP', 4:'FHVWY', 5:'K', 8:'JZ', 10:'QZ'}
dictionary_ru = {1:'АВЕИНОРСТ', 2:'ДКЛМПУ', 3:'БГЁЬЯ', 4:'ЙЫ', 5:'ЖЗХЦЧ', 8:'ШЭЮ', 10:'ФЩЪ'}

# Ввод пользователя
text = input("Введите слово: ").upper()

# list comprehension на вывод +/- понятно как он работает но нужно будет попрактиковаться
if isCyrillic(text):
	print(sum([k for i in text for k, v in dictionary_ru.items() if i in v])) # через фор прогоняет инпут и сравнивает со словарём
else:
	print(sum([k for i in text for k, v in dictionary_en.items() if i in v]))